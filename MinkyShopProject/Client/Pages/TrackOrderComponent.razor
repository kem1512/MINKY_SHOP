@page "/trackorder"
@using MinkyShopProject.Data.Models
@inject HttpClient HttpClient
@inject Blazored.SessionStorage.ISessionStorageService Session
@inject SweetAlertService Swal;

<main class="bg_gray">
	<div class="container margin_30">
		<div class="table-responsive">
			<table class="table table-bordered">
				<thead>
					<tr>
						<td>STT</td>
						<td>Mã Đơn Hàng</td>
						<td>Ngày Đặt Hàng</td>
						<td>Số Sản Phẩm</td>
						<td>Trạng Thái</td>
						<td>
							<input class="form-control" @bind="GhiChuHuyDonHang" />
						</td>
					</tr>
				</thead>
				<tbody>
					@if(HoaDon != null)
					{
						foreach (var x in HoaDon.Data)
						{
							<tr>
								<td style="vertical-align: middle">1</td>
								<td style="vertical-align: middle">@x.Ma</td>
								<td style="vertical-align: middle">@x.NgayTao</td>
								<td style="vertical-align: middle">@x.HoaDonChiTiets.Count()</td>
								<td style="vertical-align: middle">
									@{
										var trangThaiGiaoHang = "";
										@switch (x.TrangThaiGiaoHang)
										{
											case 0:
												trangThaiGiaoHang = "Chờ Xác Nhận";
												break;
											case 1:
												trangThaiGiaoHang = "Chờ Lấy Hàng";
												break;
											case 2:
												trangThaiGiaoHang = "Đang Giao";
												break;
											case 3:
												trangThaiGiaoHang = "Đã Giao";
												break;
											case 4:
												trangThaiGiaoHang = "Đã Hủy";
												break;
											case 5:
												trangThaiGiaoHang = "Chỉ Nhận Một Phần";
												break;
											case 6:
												trangThaiGiaoHang = "Giao Thất Bại";
												break;
											case 7:
												trangThaiGiaoHang = "Không Nghe Máy";
												break;
											default:
												break;
										}
									}
									@trangThaiGiaoHang
								</td>
								<td style="vertical-align: middle; width: 20%">
									<button class="btn_1">Xem Chi Tiết</button>
									@if(x.TrangThaiGiaoHang == 0 || x.TrangThaiGiaoHang == 1)
									{
										<button @onclick="() => Huy(x)" class="btn_1" style="background: red">Hủy</button>
									}
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>
</main>
<!--/main-->

@code{
	ResponseList<HoaDonModel>? HoaDon;

	string GhiChuHuyDonHang = "";

	Uri Url = new Uri("https://localhost:7053/api/hoadon");

	protected async override Task OnInitializedAsync()
	{
		var khachHang = await Session.GetItemAsync<KhachHangModel>("khachHang");
		if(khachHang != null)
			HoaDon = await HttpClient.GetFromJsonAsync<ResponseList<HoaDonModel>>("https://localhost:7053/api/HoaDon/khachhang/" + khachHang.Id);
	}

	async Task Huy(HoaDonModel hoaDon)
	{
		if(string.IsNullOrEmpty(GhiChuHuyDonHang)){ 
			await Swal.FireAsync("", "Vui Lòng Nhập Lý Do Hủy", SweetAlertIcon.Error); 
			return;
		}

		var confirm = await Swal.FireAsync(new SweetAlertOptions { TitleText = "Bạn Có Chắc Muốn Hủy Đơn Hàng", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

		if (string.IsNullOrEmpty(confirm.Value)) return;

		hoaDon.NgayCapNhat = DateTime.Now;
		hoaDon.TrangThaiGiaoHang = 4;
		var status = await HttpClient.PutAsJsonAsync<HoaDonModel>(Url.AddQuery("id", hoaDon.Id.ToString()), hoaDon);
        if (status.IsSuccessStatusCode)
        {
            await Swal.FireAsync("", "Cập Nhật Thành Công", SweetAlertIcon.Success);
        }
        else
        {

            await Swal.FireAsync("", "Cập Nhật Thất Bại", SweetAlertIcon.Error);
        }
	}
}