@page "/admin/product"
@page "/admin/product/page/{page:int}"
@using MinkyShopProject.Data.Enums
@using MinkyShopProject.Data.Models
@using System.Reflection
@using System.ComponentModel
@inject SweetAlertService Swal;
@inject HttpClient HttpClient;
@layout Shared.MainLayout
@using Net.ConnectCode.Barcode


<div class="container-fluid py-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-12 justify-content-end">
                            <NavLink class="btn btn-primary btn-sm" href="admin/variant">Thêm Sản Phẩm</NavLink>
                            @*<button class="btn btn-success btn-sm" @onclick="GenerateBarcode" data-bs-toggle="modal" data-bs-target="#exampleModal">Tạo Barcode</button>*@
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle text-center">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Tên</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Nhóm</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Giá</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Mã</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Biến Thể</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Trạng Thái</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Thao Tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (SanPhams == null)
                                {
                                    <tr>
                                        <td colspan="6">
                                            <div class="spinner-grow text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    @if (SanPhams.Data.Content.Count() > 0)
                                    {
                                        foreach (var x in SanPhams.Data.Content)
                                        {
                                            <tr>
                                                <td class="w-25">
                                                    <div class="d-flex">
                                                        <img class="ms-3" style="width: 15%" src="@x.Anh">
                                                        <input class="text-secondary ms-3 my-auto text-xs font-weight-bolder form-control border-0 py-0" disabled value="@x.Ten" />
                                                    </div>
                                                </td>
                                                <td class="text-secondary text-xs font-weight-bold align-middle">@(x.NhomSanPham?.Ten ?? "Không Có")</td>
                                                <td class="text-secondary text-xs font-weight-bold align-middle">@Helper.FormatMoney(x.BienThes?.Min(c => c.GiaBan))</td>
                                                <td class="text-secondary text-xs font-weight-bold align-middle">@x.Ma</td>
                                                <td class="text-secondary text-xs font-weight-bold align-middle">@x.BienThes?.Count() biến thể</td>
                                                <td class="align-middle">
                                                    <span class="badge badge-@(x.TrangThai == 1 ? "success" : "danger") badge-sm">@(x.TrangThai == 1 ? "Đang Bán" : "Ngừng Bán")</span>
                                                </td>
                                                <td class="text-secondary text-xs font-weight-bold align-middle">
                                                    <NavLink href="@($"admin/product/{@x.Id}")" class="mx-3" data-bs-toggle="tooltip" data-bs-original-title="Edit product">
                                                        <i class="fas fa-user-edit text-info" aria-hidden="true"></i>
                                                    </NavLink>
                                                    <a href="javascript:;" data-bs-toggle="tooltip" data-bs-original-title="Delete product" @onclick="() => Delete(x.Id)">
                                                        <i class="fas fa-trash text-danger" aria-hidden="true"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7" class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Không Có Dữ Liệu</td>
                                        </tr>
                                    }
                                }
                            </tbody>

                        </table>
                    </div>
                    <MinkyShopProject.Admin.Shared.PaginationComponent Model="SanPhams" Url="admin/product"></MinkyShopProject.Admin.Shared.PaginationComponent>
                </div>
            </div>
        </div>
    </div>
</div>
@*
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (Barcodes.Any())
                {
                    <div class="d-flex flex-wrap gap-3">
                        @foreach (var x in Barcodes)
                        {
                            <div class="d-flex flex-column">
                                <div id="barcode">@x.Barcode</div>
                                <div id="barcode_text">@x.BarcodeText</div>
                            </div>
                        }
                    </div>
                }
            </div>

                <div class="modal-footer">
                    <button type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn bg-gradient-primary">Save changes</button>
                </div>
            </div>
        </div>
</div>*@

@code {
    [Parameter]
    public int Page { get; set; }

    ResponsePagination<SanPhamModel>? SanPhams;

    Uri Url = new Uri("https://localhost:7053/api/sanpham");

    List<BarcodeModel> Barcodes = new List<BarcodeModel>();

    protected async override Task OnParametersSetAsync()
    {
        await Reload();
    }

    async Task Delete(Guid id)
    {
        var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Xóa", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

        if (string.IsNullOrEmpty(confirm.Value)) return;

        var result = await HttpClient.DeleteAsync($"{Url}/SanPham?id={id}");

        if (result.IsSuccessStatusCode)
        {
            await Reload();
        }
    }

    async Task Reload()
    {
        if (Page == 0) Page = 1;
        SanPhams = await HttpClient.GetFromJsonAsync<ResponsePagination<SanPhamModel>>(Url.AddQuery("size", "5").AddQuery("page", Page.ToString()));
    }

    //void GenerateBarcode()
    //{
    //    foreach (var x in SanPhams.Data.Content)
    //    {
    //        foreach (var y in x.BienThes)
    //        {
    //            BarcodeFonts bcf = new BarcodeFonts();
    //            bcf.BarcodeType = BarcodeFonts.BarcodeEnum.Code39;
    //            bcf.CheckDigit = BarcodeFonts.YesNoEnum.Yes;
    //            bcf.Data = y.Sku;
    //            bcf.encode();
    //            Barcodes.Add(new BarcodeModel() { Barcode = bcf.EncodedData, BarcodeText = bcf.HumanText.Substring(1, bcf.HumanText.Length - 2) });
    //        }
    //    }
    //}
}