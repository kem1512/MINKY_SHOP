@page "/product"
@using MinkyShopProject.Data.Enums
@using MinkyShopProject.Data.Models
@using System.Reflection
@using System.ComponentModel
@inject SweetAlertService Swal;
@inject HttpClient HttpClient;

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-flex align-items-center">
                        <p class="mb-0">Edit Profile</p>
                        <button class="btn btn-primary btn-sm ms-auto" @onclick="Add">Save</button>
                    </div>
                </div>
                <div class="card-body">
                    <form>
                        <label>Tên Sản Phẩm</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" @oninput='((ui) => { TenSanPham = ui.Value?.ToString() ?? ""; })'>
                        </div>
                    </form>
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle text-center">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">STT</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Sản Phẩm</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Ngày Tạo</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Trạng Thái</th>
                                    <th class="text-secondary opacity-7"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var x in Model.Select((Value, Index) => (Index, Value)))
                                {
                                    <tr>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0">@(x.Index + 1)</p>
                                        </td>
                                        <td>
                                            <span class="text-secondary text-xs font-weight-bold">@x.Value.Ten</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs font-weight-bold">@x.Value.NgayTao</span>
                                        </td>
                                        <td class="align-middle text-center p-0" style="width: 16%">
                                            <select class="form-select border-0 shadow-0">
                                                @foreach (var y in Enum.GetValues(typeof(TrangThaiSanPham)))
                                                {
                                                    <option>@y</option>
                                               }
                                            </select>
                                        </td>
                                        <td class="text-sm">
                                            <a href="/productdetail" data-bs-toggle="tooltip" data-bs-original-title="Preview product">
                                                <i class="fas fa-eye text-info" aria-hidden="true"></i>
                                            </a>
                                            <a href="javascript:;" class="mx-3" data-bs-toggle="tooltip" data-bs-original-title="Edit product">
                                                <i class="fas fa-user-edit text-warning" aria-hidden="true"></i>
                                            </a>
                                            <a href="javascript:;" data-bs-toggle="tooltip" data-bs-original-title="Delete product" @onclick="() => Delete(x.Index)">
                                                <i class="fas fa-trash text-danger" aria-hidden="true"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    string TenSanPham = "";

    List<SanPhamModel> Model = new List<SanPhamModel>();

    string Url = "https://localhost:7053/api";

    protected override async Task OnInitializedAsync()
    {
        Model = await HttpClient.GetFromJsonAsync<List<SanPhamModel>>($"{Url}/SanPham") ?? new List<SanPhamModel>();
    }

    async Task Delete(int index){
        var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Xóa", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

        if (string.IsNullOrEmpty(confirm.Value)) return;

        var result = await HttpClient.DeleteAsync($"{Url}/SanPham?id={Model[index].Id}");

        if (result.IsSuccessStatusCode)
        {
            Model.Remove(Model[index]);
        }
    }

    async Task Add()
    {
        var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Thêm", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

        if (string.IsNullOrEmpty(confirm.Value)) return;

        var result = await HttpClient.PostAsync($"{Url}/SanPham?name={TenSanPham}", null);

        if(result.IsSuccessStatusCode){
            Model.Add(new SanPhamModel() { Ten = TenSanPham }); TenSanPham = "";
        }
    }
}