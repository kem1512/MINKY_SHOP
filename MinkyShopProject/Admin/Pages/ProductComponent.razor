@page "/product"
@using MinkyShopProject.Data.Enums
@using MinkyShopProject.Data.Models
@using System.Reflection
@using System.ComponentModel
@inject SweetAlertService Swal;
@inject HttpClient HttpClient;

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <form>
                        <div class="row mb-3">
                            <div class="col-12 text-end">
                                <NavLink class="btn btn-primary btn-sm" href="/variant">Thêm Sản Phẩm</NavLink>
                            </div>
                        </div>
                    </form>
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle text-center">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">STT</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Tên Sản Phẩm</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Số Lượng Biến Thể</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Ngày Tạo</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Trạng Thái</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Thao Tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (SanPhams == null)
                                {
                                    <tr>
                                        <td colspan="6">
                                            <div class="spinner-grow text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var x in SanPhams.Select((Value, Index) => (Index, Value)))
                                    {
                                        <tr>
                                            <td>
                                                <p class="text-xs font-weight-bold mb-0">@(x.Index + 1)</p>
                                            </td>
                                            <td>
                                                <span class="text-secondary text-xs font-weight-bold">@x.Value.Ten</span>
                                            </td>
                                            <td>
                                                <span class="text-secondary text-xs font-weight-bold">@x.Value.SoLuongBienThe</span>
                                            </td>
                                            <td class="align-middle text-center text-sm">
                                                <span class="text-secondary text-xs font-weight-bold">@x.Value.NgayTao</span>
                                            </td>
                                            <td class="align-middle text-center p-0" style="width: 16%">
                                                <span class="text-secondary text-xs font-weight-bold">@x.Value.TrangThai</span>
                                            </td>
                                            <td class="text-sm">
                                                <NavLink href="@($"product/{x.Value.Id}")" data-bs-toggle="tooltip" data-bs-original-title="Preview product">
                                                    <i class="fas fa-eye text-info" aria-hidden="true"></i>
                                                </NavLink>
                                                <a href="javascript:;" class="mx-3" data-bs-toggle="tooltip" data-bs-original-title="Edit product">
                                                    <i class="fas fa-user-edit text-warning" aria-hidden="true"></i>
                                                </a>
                                                <a href="javascript:;" data-bs-toggle="tooltip" data-bs-original-title="Delete product" @onclick="() => Delete(x.Value.Id)">
                                                    <i class="fas fa-trash text-danger" aria-hidden="true"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    List<SanPhamModel>? SanPhams;

    SanPhamModel SanPham = new SanPhamModel();

    string TheLoai = "";

    string Url = "https://localhost:7053/api";

    protected override async Task OnInitializedAsync()
    {
        await Reload();
    }

    async Task Delete(Guid id){
        var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Xóa", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

        if (string.IsNullOrEmpty(confirm.Value)) return;

        var result = await HttpClient.DeleteAsync($"{Url}/SanPham?id={id}");

        if (result.IsSuccessStatusCode){
            await Reload();
        }
    }

    async Task Add()
    {
        var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Thêm", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

        if (string.IsNullOrEmpty(confirm.Value)) return;

        var result = await HttpClient.PostAsJsonAsync<SanPhamModel>($"{Url}/SanPham", SanPham);

        if(result.IsSuccessStatusCode){
            await Reload();
        }
    }

    async Task Reload()
    {
        SanPhams = await HttpClient.GetFromJsonAsync<List<SanPhamModel>>($"{Url}/SanPham") ?? new List<SanPhamModel>();
    }
}