@page "/variant"
@using MinkyShopProject.Data.Models
@inject SweetAlertService Swal;
@inject HttpClient HttpClient;

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-flex align-items-center">
                        <p class="mb-0">Edit Profile</p>
                        <button class="btn btn-primary btn-sm ms-auto" @onclick="AddAsync">Save</button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6"@onfocusout="() => { showSanPham = false; }">
                            <div class="form-group mb-0">
                                <label for="example-text-input" class="form-control-label">Sản Phẩm</label>
                                <div class="position-relative">
                                    <input class="form-control" type="text" @bind="SanPham.Ten" @onfocus="() => { showSanPham = true; }">
                                </div>
                            </div>
                            <div class="d-flex flex-wrap position-relative py-2">
                                @if (showSanPham)
                                {
                                    <div class="list-group position-absolute w-100 top-0" style="z-index: 1">
                                        @if (ModelSanPham != null)
                                        {
                                            @foreach (var x in ModelSanPham)
                                            {
                                                <button class="list-group-item list-group-item-action" aria-current="true" @onmousedown="() => { SanPham = x; TheLoai = x.TheLoais[0]; }">
                                                    @x.Ten
                                                </button>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                        @if (SanPham.TheLoais != null && SanPham.TheLoais.Count() > 0)
                        {
                            <div class="col-md-6" @onfocusout="() => { showTheLoai = false; }">
                                <div class="form-group mb-0">
                                    <label for="example-text-input" class="form-control-label">Thể Loại</label>
                                    <div class="position-relative">
                                        <input class="form-control" type="text" @bind="TheLoai.Ten" @onfocus="() => { showTheLoai = true; }">
                                    </div>
                                </div>
                                <div class="d-flex flex-wrap position-relative py-2">
                                    @if (showTheLoai)
                                    {
                                        <div class="list-group position-absolute w-100 top-0" style="z-index: 1">
                                            @if (SanPham != null)
                                            {
                                                foreach (var y in SanPham.TheLoais)
                                                {
                                                    <button class="list-group-item list-group-item-action" aria-current="true" @onmousedown="() => { TheLoai = y; }">
                                                        @y.Ten
                                                    </button>
                                                }
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        <div class="col-md-6" @onfocusout="() => { showThuocTinh = false; }">
                            <div class="form-group mb-0">
                                <label for="example-text-input" class="form-control-label">Thuộc Tính</label>
                                <div class="position-relative">
                                    <input class="form-control" type="text" @onfocus="() => { showThuocTinh = true; }">
                                </div>
                            </div>
                            <div class="d-flex flex-wrap position-relative py-2">
                                @if (showThuocTinh)
                                {
                                    <div class="list-group position-absolute w-100 top-0" style="z-index: 1">
                                        @if (ModelThuocTinh != null)
                                        {
                                            @foreach (var x in ModelThuocTinh)
                                            {
                                                <button class="list-group-item list-group-item-action" aria-current="true" @onmousedown="() => { ModelTemplate.Add(x); ModelThuocTinh.Remove(x); showGiaTri.Add(false); }">
                                                    @x.Ten
                                                </button>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                        @if (ModelTemplate != null)
                        {
                            @foreach (var x in ModelTemplate.Select((Value, Index) => (Index, Value)))
                            {
                                <div class="col-md-6" @onfocusout="() => { showGiaTri[x.Index] = false; }">
                                    <div class="form-group mb-0">
                                        <label for="example-text-input" class="form-control-label">@x.Value.Ten</label>
                                        <div class="position-relative">
                                            <input class="form-control" type="text" @onfocus="() => { showGiaTri[x.Index] = true; }">
                                            <i class="fa fa-times position-absolute top-50 end-0 translate-middle-y text-danger" style="cursor: pointer" aria-hidden="true" @onclick="() => { ModelTemplate.Remove(x.Value); ModelThuocTinh?.Add(new ThuocTinhModel() { Id = x.Value.Id, Ten = x.Value.Ten }); }"></i>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-wrap position-relative py-2">
                                        <div class="list-group position-absolute w-100 top-0" style="z-index: 1">
                                            @if (showGiaTri[x.Index])
                                            {
                                                @foreach (var y in x.Value.GiaTris)
                                                {
                                                    <button class="list-group-item list-group-item-action" aria-current="true" @onmousedown="() => { x.Value.GiaTriTemplates?.Add(y); x.Value.GiaTris.Remove(y); }">
                                                        @y.Ten
                                                    </button>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="d-flex flex-wrap position-relative py-2">
                                        <div class="d-flex flex-wrap">
                                            @if (x.Value.GiaTriTemplates != null)
                                            {
                                                @foreach (var y in x.Value.GiaTriTemplates)
                                                {
                                                    <span class="badge badge-primary me-2 mt-0" style="cursor: pointer" @onmousedown="() => {  x.Value.GiaTriTemplates.Remove(y); x.Value.GiaTris?.Add(y); }">@y.Ten</span>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    bool showThuocTinh = false;

    bool showTheLoai = false;

    bool showSanPham = false;

    string Url = "https://localhost:7053/api";

    List<bool> showGiaTri = new List<bool>();

    List<ThuocTinhModel> ModelThuocTinh = new List<ThuocTinhModel>();

    List<ThuocTinhModel> ModelTemplate = new List<ThuocTinhModel>();

    List<SanPhamModel> ModelSanPham = new List<SanPhamModel>();

    SanPhamModel SanPham = new SanPhamModel();

    SanPhamModel TheLoai = new SanPhamModel();

    protected override async Task OnInitializedAsync()
    {
        ModelThuocTinh = await HttpClient.GetFromJsonAsync<List<ThuocTinhModel>>($"{Url}/ThuocTinh") ?? new List<ThuocTinhModel>();
        ModelSanPham = await HttpClient.GetFromJsonAsync<List<SanPhamModel>>($"{Url}/SanPham") ?? new List<SanPhamModel>();
    }

    public async Task AddAsync(){
        var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Thêm", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

        if (string.IsNullOrEmpty(confirm.Value)) return;

        if (ModelTemplate.Count() > 0)
        {

            var result = new List<ThuocTinhModel>();

            foreach (var x in ModelTemplate)
            {
                if (x.GiaTriTemplates.Count() > 0)
                {
                    result.Add(new ThuocTinhModel() { Ten = x.Ten, Id = x.Id, GiaTris = x.GiaTriTemplates });
                }
            }

            var result2 = await HttpClient.PostAsJsonAsync<List<ThuocTinhModel>>($"{Url}/BienThe?idSanPham={TheLoai.Id}", result);

            if (result2.IsSuccessStatusCode)
            {
                ModelTemplate = new List<ThuocTinhModel>();
            }
        }
    }
}